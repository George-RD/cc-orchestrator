# Quality Gates Workflow
# Enforces code quality standards across the project

name: Quality Gates

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis
          
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests
        run: npm test -- --coverage --testPathPattern=unit
        
      - name: Run integration tests
        run: npm test -- --coverage --testPathPattern=integration
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'claude-template'
          path: '.'
          format: 'HTML'
          args: >
            --enableRetired
            --enableExperimental
            
  performance-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install and build base
        run: |
          npm ci
          npm run build
          mv dist dist-base
          
      - name: Checkout PR branch
        uses: actions/checkout@v4
        
      - name: Install and build PR
        run: |
          npm ci
          npm run build
          
      - name: Bundle size comparison
        run: |
          BASE_SIZE=$(du -sb dist-base | cut -f1)
          PR_SIZE=$(du -sb dist | cut -f1)
          DIFF=$((PR_SIZE - BASE_SIZE))
          PERCENT=$((DIFF * 100 / BASE_SIZE))
          
          echo "Base bundle size: $BASE_SIZE bytes"
          echo "PR bundle size: $PR_SIZE bytes"
          echo "Difference: $DIFF bytes ($PERCENT%)"
          
          if [ $PERCENT -gt 10 ]; then
            echo "::warning::Bundle size increased by more than 10%"
          fi
          
      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/dashboard
          budgetPath: ./lighthouse-budget.json
          uploadArtifacts: true
          temporaryPublicStorage: true
          
  documentation-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Check documentation coverage
        run: |
          npm run docs:coverage
          
      - name: Validate API documentation
        run: |
          npx @redocly/openapi-cli lint openapi.yaml
          
      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          check-modified-files-only: 'yes'
          
      - name: Spell check
        uses: streetsidesoftware/cspell-action@v5
        with:
          files: |
            **/*.md
            **/*.js
            **/*.ts
          config: .cspell.json
          
  artifact-validation:
    runs-on: ubuntu-latest
    needs: [code-quality, security-scan]
    
    steps:
      - name: Validate build artifacts
        run: |
          echo "Validating that all quality gates passed"
          echo "Ready for deployment"
